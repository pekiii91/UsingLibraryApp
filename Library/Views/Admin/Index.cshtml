@model IEnumerable<Library.Models.UsersHelperModels.UserModel>
@using Library.Service
@using Microsoft.AspNetCore.Identity;

@{
    ViewBag.Title = "Index";
}

<div class="top-buffer"></div>
<div class="panel panel-primary">
    <div class="panel-heading panel-head">Users</div>
    <div class="panel-body">
        <div class="top-buffer"></div>
        <table class="table table-bordered table-striped table-condensed">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Roles</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <th>@Html.DisplayFor(modelItem => item.Phone)</th>
                        <th>@Html.DisplayFor(modelItem => item.Role)</th>
                        <td>
                            @if (item.Role == null)
                            {
                                <a class="btn btn-success" onclick="addRolesStudent('@item.Id')">Add student role</a>
                                <a class="btn btn-success" onclick="addRolesLibrarian('@item.Id')">Add librarian role</a>
                            }
                            else
                            {
                                <a class="btn btn-danger" onclick="deleteRole('@item.Id')">Remove role</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="placeAddRoleModal" class="modal" tabindex="-1" role="dialog"></div>

@section Scripts
{
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/bootbox/bootbox.min.js"></script>

    <script type="text/javascript">

        var success =  @Html.Raw(Json.Serialize(StatusEnum.Success));
        var failed = @Html.Raw(Json.Serialize(StatusEnum.Failed));
        var noData = @Html.Raw(Json.Serialize(StatusEnum.NoContent));

        function refreshIndexPage() {
           window.location.replace('@Url.Action("Index", "Admin")');
        };

        function addRolesStudent(id) {
        bootbox.confirm({
            message: "Are you sure you want to add role student?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                console.log(result);
                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("AddStudent", "Admin")',
                        data: {
                            Id: id
                        }
                    }).done(function (result) {
                        bootbox.alert({
                            message: result.message,
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    }).fail(function () {
                        bootbox.alert({
                            message: 'Error',
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    });
                }
            }
        });
        };

        function addRolesLibrarian(id) {
        bootbox.confirm({
            message: "Are you sure you want to add role librarian?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                console.log(result);
                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("AddLibrarian", "Admin")',
                        data: {
                            Id: id
                        }
                    }).done(function (result) {
                        bootbox.alert({
                            message: result.message,
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    }).fail(function () {
                        bootbox.alert({
                            message: 'Error',
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    });
                }
            }
        });
        };


         function deleteRole(id) {
         bootbox.confirm({
            message: "Are you sure you want to remove role?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                console.log(result);
                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteRole", "Admin")',
                        data: {
                            Id: id
                        }
                    }).done(function (result) {
                        bootbox.alert({
                            message: result.message,
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    }).fail(function () {
                        bootbox.alert({
                            message: 'Error',
                            callback: function () {
                                refreshIndexPage();
                            }
                        });
                    });
                }
            }
        });
        };



    </script>

}